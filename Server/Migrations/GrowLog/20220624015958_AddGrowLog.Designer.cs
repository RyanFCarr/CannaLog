// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Contexts;

#nullable disable

namespace Server.Migrations.GrowLog
{
    [DbContext(typeof(GrowLogContext))]
    [Migration("20220624015958_AddGrowLog")]
    partial class AddGrowLog
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Server.Models.Additive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Additive");
                });

            modelBuilder.Entity("Server.Models.AdditiveAdjustment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FinalPPM")
                        .HasColumnType("int");

                    b.Property<int?>("GrowLogId")
                        .HasColumnType("int");

                    b.Property<int>("InitialPPM")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GrowLogId");

                    b.ToTable("AdditiveAdjustment");
                });

            modelBuilder.Entity("Server.Models.AdditiveDosage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AdditiveAdjustmentId")
                        .HasColumnType("int");

                    b.Property<int>("AdditiveId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasPrecision(8, 3)
                        .HasColumnType("decimal(8,3)");

                    b.Property<int?>("PHAdjustmentId")
                        .HasColumnType("int");

                    b.Property<string>("UnitofMeasure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdditiveAdjustmentId");

                    b.HasIndex("AdditiveId");

                    b.HasIndex("PHAdjustmentId");

                    b.ToTable("AdditiveDosage");
                });

            modelBuilder.Entity("Server.Models.GrowLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal?>("AirTemperature")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal>("FinalPH")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<int>("FinalPPM")
                        .HasColumnType("int");

                    b.Property<decimal?>("GrowMediumTemperature")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)");

                    b.Property<decimal?>("Humidity")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<decimal>("InitialPH")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<int>("InitialPPM")
                        .HasColumnType("int");

                    b.Property<decimal?>("LightHeight")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantAge")
                        .HasColumnType("int");

                    b.Property<decimal?>("PlantHeight")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GrowLogs");
                });

            modelBuilder.Entity("Server.Models.PHAdjustment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AdditiveAdjustmentId")
                        .HasColumnType("int");

                    b.Property<decimal>("FinalPH")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.Property<decimal>("InitialPH")
                        .HasPrecision(3, 1)
                        .HasColumnType("decimal(3,1)");

                    b.HasKey("Id");

                    b.HasIndex("AdditiveAdjustmentId");

                    b.ToTable("PHAdjustment");
                });

            modelBuilder.Entity("Server.Models.AdditiveAdjustment", b =>
                {
                    b.HasOne("Server.Models.GrowLog", null)
                        .WithMany("AdditiveAdjustments")
                        .HasForeignKey("GrowLogId");
                });

            modelBuilder.Entity("Server.Models.AdditiveDosage", b =>
                {
                    b.HasOne("Server.Models.AdditiveAdjustment", null)
                        .WithMany("Dosages")
                        .HasForeignKey("AdditiveAdjustmentId");

                    b.HasOne("Server.Models.Additive", "Additive")
                        .WithMany()
                        .HasForeignKey("AdditiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Server.Models.PHAdjustment", null)
                        .WithMany("Dosages")
                        .HasForeignKey("PHAdjustmentId");

                    b.Navigation("Additive");
                });

            modelBuilder.Entity("Server.Models.PHAdjustment", b =>
                {
                    b.HasOne("Server.Models.AdditiveAdjustment", null)
                        .WithMany("PHAdjustments")
                        .HasForeignKey("AdditiveAdjustmentId");
                });

            modelBuilder.Entity("Server.Models.AdditiveAdjustment", b =>
                {
                    b.Navigation("Dosages");

                    b.Navigation("PHAdjustments");
                });

            modelBuilder.Entity("Server.Models.GrowLog", b =>
                {
                    b.Navigation("AdditiveAdjustments");
                });

            modelBuilder.Entity("Server.Models.PHAdjustment", b =>
                {
                    b.Navigation("Dosages");
                });
#pragma warning restore 612, 618
        }
    }
}
